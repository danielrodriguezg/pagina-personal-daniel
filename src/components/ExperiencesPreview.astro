---
import type { MarkdownInstance } from 'astro';
import type { Experiencias } from '../types';

interface Props {
	actual: MarkdownInstance<Experiencias>;
}

const { frontmatter, url } = Astro.props.actual;
---

<div class="card">
	<div class="titleCard" style={`background-image:url(https://cdn.techtitute.com/portal-blog/Metodologias-agiles-para-el-desarrollo-de-software-Scrum-scaled.jpg)`}>
		<h1 class="title">{frontmatter.title}</h1>
        <br>
	</div>
	<div class="descCard">
		<p class="desc">{frontmatter.description} <br> Cliente: {frontmatter.client}</p>
		<div class="tags">
            <br>
            <h3>Stack tecnol√≥gico</h3>
            <br>
			{frontmatter.tags.map((t) => (
				<div class="tag" data-tag={t}>
					{t}
				</div>
			))}
		</div>
		<a class="link" href={url}>
			<span class="button linkInner">Ver mas...</span>
		</a>
	</div>
</div>
<style>	
.card {
    position: relative;
    color: var(--c-white);
    background: var(--c-bg);
    border: 1px solid #f0f0f0;
    border-radius: 10px;
    margin: 2em 0;
    overflow: hidden;
}

.title {
    position: absolute;
    top: 0;
    width: 100%;
    height: 100%;
    display: flex;
    align-items: center;
    justify-content: center;
    margin: 0;
    color: white;
    flex-direction: column;
    font-size: var(--f-u4);
    font-weight: 900;
    text-transform: uppercase;
    letter-spacing: 0.0625em;
}

.titleCard {
    position: relative;
    background-size: cover;
    background-position: 50% 100%;
    padding-top: 37.5%;
}

.descCard {
    padding: 1.5em;
}

.desc {
    font-size: var(--f-u1);
    line-height: 1.4;
    margin-top: 0em;
    margin-bottom: 1em;
}

.link {
    position: absolute;
    border-radius: 10px;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    display: flex;
    align-items: center;
    justify-content: center;
    background: rgba(0, 0, 0, 0.25);
    opacity: 0;
    transition: opacity 150ms linear;
}

.link:focus,
.link:hover {
    opacity: 1;
}

.link:focus,
.link:hover .linkInner {
    transform: translateY(0);
    border-color: rgba(255, 255, 255, 0.625);
}

.link:focus,
.link:hover .card {
    box-shadow: 0px 0px 23px 5px rgba(0,0,0,0.75);
}

.linkInner {
    transition: transform 300ms cubic-bezier(0, 0.4, 0.6, 1), border-color 1s linear, background-color .2s ease !important ;
    transform: translateY(25%);
}

.tags {
    font-size: var(--f-d2);
    text-transform: uppercase;
    text-align: center;
}

.tag {
    display: inline-block;
    color: var(--c-yellow);
    text-transform: uppercase;
    margin-left: 0.5em;
}

.tag:nth-of-type(1n) {
    color: var(--c-green);
}
.tag:nth-of-type(2n) {
    color: var(--c-orange);
}
.tag:nth-of-type(3n) {
    color: var(--c-blue);
}
.tag:nth-of-type(4n) {
    color: var(--c-pink);
}</style>